#!/usr/bin/env python

import sys, os, argparse
from io import StringIO
import numpy as np
from pylab import *
import re

sys.path.append( os.path.expanduser('~/bin_local') )
from util import float_u

parse = argparse.ArgumentParser()
parse.add_argument( "files", nargs="+", help = "files to plot" )
parse.add_argument( "--outfile",  help = "output png file name" )
parse.add_argument( "--xlog", action='store_true', help = "plot with log x axis" )
parse.add_argument( "--ylog", action='store_true', help = "plot with log y axis" )
parse.add_argument( "--show", action='store_true', help = "show plot" )
parse.add_argument( "--nolabel", action='store_true', help = "no label" )
parse.add_argument( "--title", help = "title" )
parse.add_argument( "--xlabel", help = "x label" )
parse.add_argument( "--ylabel", help = "y label" )
args = parse.parse_args()

files = sys.argv[1:]
t = ""
if sys.argv[1] == "-t":
    t = sys.argv[2]
    files = sys.argv[3:]

for f in args.files:
    print f
    tmp = np.loadtxt( f , unpack = False, delimiter="\t", converters = { 0: float_u } )
    arr = tmp[ np.argsort( tmp[:,0] ) ]
    a = np.array( [ e[0] for e in arr ] )
    b = np.array( [ e[1] for e in arr ] )
    #c = np.array( [ e[2] for e in arr ] )

    if args.nolabel:
        plot(a ,b , "x" ) #, label= f )
    else:
        plot(a ,b , "o--" , label= f )
    #plot(a , np.abs(b) , "o--", label= f )
    #plot(a , np.abs(c) , "o--", label= "sigma" )

#plot( [-100,100], [64,64], "--" )

if args.xlog :
    xscale("log")
if args.ylog :
    yscale("log")

if args.xlabel:
    print args.xlabel
    xlabel(args.xlabel )
if args.ylabel:
    ylabel(args.ylabel )
#ylabel("count(max=64)")
if args.title:
    title( args.title )
#title("count vs Tdelay   @Voff sigma = 1/3m")
#xlim(-15e-9, 15e-9)
#ylim( -1e-8, 1e-8)

legend( loc="best")

figtmp=plt.gcf()
if args.show :
    show()

if args.outfile:
    figtmp.savefig( str( args.outfile ) )
else:
    savefig( "slope-vs-tcross.png" )
